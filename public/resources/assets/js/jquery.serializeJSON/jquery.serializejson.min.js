/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(1);


/***/ }),
/* 1 */
/***/ (function(module, exports) {

$(function () {
    PNotify.prototype.options.styling = "bootstrap3";
    PNotify.prototype.options.styling = "fontawesome";

    $("#submitSearch").click(function (event) {
        if ($("#immobile-type-advanced").val() == "") {
            new PNotify({
                title: 'Importante',
                text: 'O Tipo deve ser preenchido',
                type: 'error',
                icon: 'fa fa-error',
                styling: 'fontawesome',
                animate_speed: 'fast'
            });
            return false;
        }

        if ($("#immobiles_district").val() == "") {
            new PNotify({
                title: 'Importante',
                text: 'Pelo menos um bairro deve ser escolhido',
                type: 'error',
                icon: 'fa fa-error',
                styling: 'fontawesome',
                animate_speed: 'fast'
            });
            // $('#immobiles_district').SumoSelect({
            //        isOpen: true,
            //        keepOpen: true
            //    });
            $('#immobiles_district').SumoSelect();
            return false;
        }

        if ($("#immobile-type-advanced").val() && $("#immobiles_district-type-advanced").val() != "") {
            return true;
        }
    });
});

$(document).ready(function () {
    //modal de contato
    //$("#modal_contact").modal('show');
    $("#btn_send_contact").html('Enviar Mensagem');

    //modal contato
    $("#id_icon_send").hide();
    $("#info_send_contact").hide();

    /*PARA OS VALORES*/
    $("#input-range-prince").ionRangeSlider({
        type: "double",
        min: 0,
        max: 3500,
        from: 150,
        to: 1200,
        prefix: "R$"
    });

    $(".price-filter-advanced").ionRangeSlider({
        type: "double",
        min: 0,
        max: 5500,
        from: 150,
        to: 1200,
        prefix: "R$"
    });

    $(".area-filter-advanced").ionRangeSlider({
        type: "simgle",
        min: 0,
        max: 3000,
        from: 10,
        to: 1200

    });
    //OCUTANDO DIV DE BUSCA AVANÇADA  
    //$("#filterAdvancedImmobile").hide();

    all_district = [];
    //URL COM DADOS
    $.get(domain_complet + 'todos-bairros', function (data) {

        //LOOP        
        $.each(data, function (index, val) {
            //PREENCHANDO O ARRAY            
            all_district.push(val);
        });
    });

    function split(val) {
        return val.split(/,\s*/);
    }

    function extractLast(term) {
        return split(term).pop();
    }

    $(".input-autocomplet").on("keydown", function (event) {
        if (event.keyCode === $.ui.keyCode.TAB && $(this).autocomplete("instance").menu.active) {
            event.preventDefault();
        }
    }).autocomplete({
        //source: domain_complet+"district-city",

        minLength: 3,
        source: function source(request, response) {

            // delegate back to autocomplete, but extract the last term
            response($.ui.autocomplete.filter(all_district, extractLast(request.term)));
        },
        focus: function focus() {
            // prevent value inserted on focus
            return false;
        },
        select: function select(event, ui) {
            var terms = split(this.value);
            // remove the current input
            terms.pop();
            // add the selected item
            terms.push(ui.item.value);
            // add placeholder to get the comma-and-space at the end
            terms.push("");
            this.value = terms.join(", ");
            return false;
            //$('#district').val(ui.item.immobiles_district);
            console.log(ui.item.immobiles_district);
        }
    });

    $("#immobile-type-advanced").SumoSelect({
        search: true,
        searchText: 'Escolha o Tipo',
        placeholder: 'Escolha ou pesquise',
        captionFormat: '{0} selecionado',
        captionFormatAllSelected: ' {0} selecionados',
        locale: ['OK', 'Sair', 'Tudo'],
        selectAll: true

    });
    $("#immobiles_district").SumoSelect({
        search: true,
        searchText: 'Escolha o bairro',
        placeholder: 'Escolha ou pesquise',
        captionFormat: '{0} selecionado',
        locale: ['OK', 'Sair', 'Tudo'],
        selectAll: true
    });
    $("#type-immobile").SumoSelect({
        search: true,
        searchText: 'Escolha o Tipo',
        placeholder: 'Qual o Imóvel?',
        captionFormat: '{0} selecionado',
        noMatch: 'Nada encontrado "{0}"',
        locale: ['OK', 'Cancelar']
    });
    $("#type-immobile-by").SumoSelect({
        search: true,
        searchText: 'Escolha o Tipo',
        placeholder: 'Qual o Imóvel?',
        captionFormat: '{0} selecionado',
        noMatch: 'Nada encontrado "{0}"',
        locale: ['OK', 'Cancelar']
    });
    $("#district-by").SumoSelect({
        search: true,
        searchText: 'Escolha o Tipo',
        placeholder: 'Tipo do Imóvel',
        captionFormat: '{0} selecionado'
    });
    $("#type-immobile-all").SumoSelect({
        search: true,
        searchText: 'Escolha o Tipo',
        placeholder: 'Qual o Imóvel?',
        captionFormat: '{0} selecionado'
    });
    $("#district-all").SumoSelect({
        search: true,
        searchText: 'Escolha o Tipo',
        placeholder: 'Tipo do Imóvel',
        captionFormat: '{0} selecionado'
    });

    $("#city_index").SumoSelect({
        search: true,
        searchText: 'Escolha ou pesquise',
        placeholder: 'Onde quer morar?',
        captionFormat: '{0} selecionado'
    });

    $("#filterAdvanced").click(function () {

        $("#filterAdvancedImmobile").show();

        if ($(".typefilteradvanced").val() == "Terreno") {
            $('.dormitoryfilteradvanced')[0].sumo.disable();
        }
    });

    /*DIV DE FILTRO AVANÇADO*/
    $(".typefilteradvanced").SumoSelect({
        search: true,
        searchText: 'Escolha ou pesquise',
        placeholder: 'Qual o tipo?',
        captionFormat: '{0} selecionado'
    });
    // $(".typefilteradvanced").select2();
    $(".cityfilteradvanced").SumoSelect({
        search: true,
        searchText: 'Escolha ou pesquise',
        placeholder: 'Qual a cidade?',
        captionFormat: '{0} selecionado'
    });

    $(".districtfilteradvanced").SumoSelect({
        search: true,
        searchText: 'Escolha ou pesquise',
        placeholder: 'Qual o bairro?',
        captionFormat: '{0} selecionado'
    });

    $(".dormitoryfilteradvanced").SumoSelect({
        search: true,
        searchText: 'Escolha ou pesquise',
        placeholder: 'Quantos Quartos?',
        captionFormat: '{0} selecionado'
    });

    $(".jobsfilteradvanced").SumoSelect({
        search: true,
        searchText: 'Escolha ou pesquise',
        placeholder: 'Quantas Vagas?',
        captionFormat: '{0} selecionado'
    });

    //DESABILIZANDO SELECT
    function disabledItens() {
        $('.dormitoryfilteradvanced')[0].sumo.disable();
        $(".jobsfilteradvanced")[0].sumo.disable();
        // $(".typefilteradvanced")[0].sumo.disableItem(0);
        // $(".typefilteradvanced")[0].sumo.disableItem(1);
        // $(".typefilteradvanced")[0].sumo.disableItem(2);
    }
    //HABILITANDO SELECT
    function enabledItens() {
        $('.dormitoryfilteradvanced')[0].sumo.enable();
        $(".jobsfilteradvanced")[0].sumo.enable();
        // $(".typefilteradvanced")[0].sumo.enableItem(0);
        // $(".typefilteradvanced")[0].sumo.enableItem(1);
        // $(".typefilteradvanced")[0].sumo.enableItem(2);
    }
    //SELECIONANDO A OPÇÃO PARA DESABILITAR OUTROS ITENS
    $(".typefilteradvanced").change(function (event) {

        //FORÇANDO A SELEÇÃO
        $(".typefilteradvanced")[0].sumo.selectItem($(".typefilteradvanced").val());
        //DESABILITANDO EM CASO DE ESCOLHER TERRENO OU SALA
        if ($(".typefilteradvanced").val() == "Terreno" || $(".typefilteradvanced").val() == "Sala") {
            disabledItens();
        } else if ($(".typefilteradvanced").val() != "Terreno") {
            enabledItens();
        }
    });

    $(".typefilteradvanced").click(function (event) {
        selec = $(".typefilteradvanced").find('.optWrapper').addClass('select_filter');
        console.log(selec);
        console.log('dentro');
        //$(".typefilteradvanced").find('.optWrapper').addClass('select_filter');
    });

    $("#btn_send_contact").click(function (event) {
        /* Act on the event */
        $("#btn_send_contact").html('Enviando Mensagem');
        $("#id_icon_send").show();
        // console.log($("#form_contact").serializeJSON() );
        $.ajax({
            url: domain_complet + '/enviar-mensagem',
            type: 'POST',
            dataType: 'JSON',
            data: $("#form_contact").serializeJSON(),
            success: function success(data) {
                $("#info_send_contact").show();
                $("#btn_send_contact").html('Enviar Nova Mensagem');
                $("#id_icon_send").hide();
            }
        }).done(function () {
            console.log("success");
        }).fail(function () {
            console.log("error");
        }).always(function () {
            console.log("complete");
        });
    });
});

/***/ })
/******/ ]);